syntax = "proto3";

package admin.service.v1;


import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "pagination/v1/pagination.proto";
import "content/service/v1/tag.proto";

// 标签服务
service TagService {
  // 获取标签列表
  rpc ListTag (pagination.PagingRequest) returns (content.service.v1.ListTagResponse) {
    option (google.api.http) = {
      get: "/admin/v1/tags"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 获取标签数据
  rpc GetTag (content.service.v1.GetTagRequest) returns (content.service.v1.Tag) {
    option (google.api.http) = {
      get: "/admin/v1/tags/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 创建标签
  rpc CreateTag (content.service.v1.CreateTagRequest) returns (content.service.v1.Tag) {
    option (google.api.http) = {
      post: "/admin/v1/tags"
      body: "*"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 更新标签
  rpc UpdateTag (content.service.v1.UpdateTagRequest) returns (content.service.v1.Tag) {
    option (google.api.http) = {
      put: "/admin/v1/tags/{id}"
      body: "tag"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }

  // 删除标签
  rpc DeleteTag (content.service.v1.DeleteTagRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/admin/v1/tags/{id}"
    };

    option(gnostic.openapi.v3.operation) = {
      security: [{additional_properties: [{name: "OAuth2PasswordBearer"; value: {}}]}]
    };
  }
}
